<project name="tao-community-package" default="help" basedir=".">
	<property name="log.path" value="/dev/stderr" />
	<property name="package.source" value="*" />
	<property environment="env" />
	<property name="github.token" value="${env.GITHUB_TOKEN}" />
  <php expression="preg_replace('/^refs\/tags\/(.*)/','$1','${env.CPHP_GIT_REF}')" returnProperty="github.tag"/>
  <php expression="preg_replace('/^refs\/tags\/.*-([0-9.]*)/','$1','${env.CPHP_GIT_REF}')" returnProperty="release.version"/>
  <php expression="preg_replace('/([0-9]*)\.([0-9]*)\.?([0-9]*)?/','$1','${release.version}')" returnProperty="release.version.major"/>
  <php expression="preg_replace('/([0-9]*)\.([0-9]*)\.?([0-9]*)?/','$2','${release.version}')" returnProperty="release.version.minor"/>
  <php expression="preg_replace('/([0-9]*)\.([0-9]*)\.?([0-9]*)?/','$3','${release.version}')" returnProperty="release.version.bugfix"/>
  <php expression="preg_replace('/^refs\/tags\/(.*)/','$1','${env.CPHP_GIT_REF}').'.tar.gz'" returnProperty="package.output.tar"/>
  <php expression="preg_replace('/^refs\/tags\/(.*)/','$1','${env.CPHP_GIT_REF}').'.noarch.rpm'" returnProperty="package.output.rpm"/>
	<property name="build.deb.name" value="tao-community_${release.version.major}.${release.version.minor}-${release.version.bugfix}" />
	<property name="build.ppa.name" value="tao-community-${release.version.major}.${release.version.minor}.${release.version.bugfix}" />
	<property name="package.output.deb" value="${build.deb.name}.deb" />
	<property name="package.output.ppa" value="${build.ppa.name}.deb" />
  <exec command="git ls-remote --get-url |  sed -E -e 's@^(.*)[:](.*)/(.*)$@\2@' -e's/\.git//'" outputProperty="github.owner"/>
  <exec command="git ls-remote --get-url |  sed -E -e 's@^(.*)[:](.*)/(.*)$@\3@' -e's/\.git//'" outputProperty="github.repo"/>

    <target name="help" description="List available targets">
        <exec executable="phing"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>

		<target name="continuous-deps">
			<exec command="apt-get install -y dh-make bzr-builddeb"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
		</target>

		<target name="pack-tar" description="Create a tar from the application source">
        <echo msg="Creating the package ${package.output.tar}"/>
	      <exec command="tar -c -z --exclude=.git --exclude=*/.git --exclude=. --exclude=.. -f ../../${package.output.tar} * .*"
					    dir="source/app"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
    </target>

    <target name="pack-ppa" description="create a ppa from the application source">
			  <fail msg="not yet implemented" />
			  <property name="build.ppa.path" value="./build/ppa/${build.ppa.name}" />
        <echo msg="copy source package ${package.output.tar} to ppa build environement"/>
	      <exec command="rm -rf ${build.ppa.path} ; mkdir -p ${build.ppa.path} ; cp ${package.output.tar} ${build.ppa.path}/"
              error="${log.path}"
              checkreturn="true"/>
	      <exec command="mkdir -p usr/share/tao-community ; tar xfz ${package.output.tar} -C usr/share/tao-community"
					    dir="${build.ppa.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="mv ${package.output.tar} ../${build.ppa.name}.orig.tar.gz"
					    dir="${build.ppa.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="DEBFULLNAME='Open Assessment Technologies S.A.' dh_make --native -y -i -e support@taotesting.com -c gpl2 -p tao-community"
					    dir="${build.ppa.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
				<exec command="echo 'usr/share/tao-community/* usr/share/tao-community/' >debian/install"
					    dir="${build.ppa.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>

	      <exec command="rm debian/*.ex ; debuild -S -sa --source-option=--include-binaries"
					    dir="${build.ppa.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
    </target>

    <target name="pack-deb" description="create a deb from the application source">
			  <property name="build.deb.path" value="./build/deb/${build.deb.name}" />
        <echo msg="copy source package ${package.output.tar} to deb build environement"/>
	      <exec command="rm -rf ${build.deb.path} ; mkdir -p ${build.deb.path}/DEBIAN ; cp ${package.output.tar} ${build.deb.path}/"
              error="${log.path}"
              checkreturn="true"/>
	      <exec command="cp ./source/deb/control ${build.deb.path}/DEBIAN/control"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="echo 'Version: ${release.version.major}.${release.version.minor}-${release.version.bugfix}' >>${build.deb.path}/DEBIAN/control"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="mkdir -p usr/share/tao-community ; tar xfz ${package.output.tar} -C usr/share/tao-community"
					    dir="${build.deb.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="rm -f ${package.output.tar}"
					    dir="${build.deb.path}"
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="dpkg-deb -b ${build.deb.name}"
					    dir="${build.deb.path}/.."
              error="${log.path}"
              passthru="true"
              checkreturn="true"/>
	      <exec command="mv ${build.deb.path}.deb ./"
              passthru="true"
              error="${log.path}"
              checkreturn="true"/>
    </target>

    <target name="pack-rpm" description="Create a rpm from the application source">
			  <property name="build.rpm.path" value="./build/rpm/" />
        <echo msg="Copy source package ${package.output.tar} to RPM build environement"/>
	      <exec command="rm -rf ${build.rpm.path} ; mkdir -p ${build.rpm.path}/SOURCES/ ; cp ${package.output.tar} ${build.rpm.path}/SOURCES/"
              error="${log.path}"
              checkreturn="true"/>
        <echo msg="Creating the package ${package.output.rpm}"/>
	      <exec command="TAO_VERSION='${release.version}' rpmbuild -ba ./source/rpm/tao-community.spec --target noarch --define '_topdir ${phing.dir}/${build.rpm.path}' --define '_rpmfilename ${package.output.rpm}'"
              error="${log.path}"
              checkreturn="true"/>
	      <exec command="mv ${build.rpm.path}/RPMS/${package.output.rpm} ./"
              error="${log.path}"
              checkreturn="true"/>
    </target>

		<target name="identify-release">
			<echo msg="Identifying release ID for ${github.tag}" />
			<exec command="curl -s -H 'Authorization: token ${github.token}' https://api.github.com/repos/${github.owner}/${github.repo}/releases/tags/${github.tag}  | xargs -0 node -e 'console.log(JSON.parse(process.argv[1]).id)'"
				      outputProperty="github.release.id"
              error="${log.path}"
              checkreturn="true"/>
		</target>

		<target name="push-tar" depends="identify-release">
			<echo msg="Pushing ${package.output.tar} to ${github.tag} (${github.release.id})" />
			<exec command="curl -H 'Authorization: token ${github.token}' -H 'Content-Type: application/octet-stream' --data-binary @'${package.output.tar}' 'https://uploads.github.com/repos/${github.owner}/${github.repo}/releases/${github.release.id}/assets?name=${package.output.tar}'"
              error="${log.path}"
              checkreturn="true"/>
		</target>

		<target name="push-rpm" depends="identify-release">
			<echo msg="Pushing ${package.output.rpm} to ${github.tag} (${github.release.id})" />
			<exec command="curl -H 'Authorization: token ${github.token}' -H 'Content-Type: application/octet-stream' --data-binary @'${package.output.rpm}' 'https://uploads.github.com/repos/${github.owner}/${github.repo}/releases/${github.release.id}/assets?name=${package.output.rpm}'"
              error="${log.path}"
              checkreturn="true"/>
		</target>

		<target name="push-deb" depends="identify-release">
			<echo msg="Pushing ${package.output.deb} to ${github.tag} (${github.release.id})" />
			<exec command="curl -H 'Authorization: token ${github.token}' -H 'Content-Type: application/octet-stream' --data-binary @'${package.output.deb}' 'https://uploads.github.com/repos/${github.owner}/${github.repo}/releases/${github.release.id}/assets?name=${package.output.deb}'"
              error="${log.path}"
              checkreturn="true"/>

		</target>
</project>
